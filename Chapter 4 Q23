#include<iostream>
#include<vector>
#include<cmath>
#include<thread>
#include<bits/stdc++.h>
using namespace std;

std::vector<int>primes;
void SieveOfEratosthenes(int n)
{

    bool prime[n + 1];
    memset(prime, true, sizeof(prime));
    for (int p = 2; p * p <= n; p++)
    {
        if (prime[p] == true)
        {
           for (int i = p * p; i <= n; i += p)
                 prime[i] = false;
        }
    }
 
    for (int p = 2; p <= n; p++)
        if (prime[p])
            cout << p << " ";
}
int main()
{
  int how_many_primes;
  cout<<"Enter number till which primes you wish to generate\n";
  cin>>how_many_primes;
  thread t1(SieveOfEratosthenes,how_many_primes);
  t1.join();
  for(int i=0;i<primes.size();i++)
    {
          std::cout<<primes[i]<<' ';
          if(i%10 == 0 && i!=0)
              {
                    cout<<'\n';
              }
    }
return 0;
}
